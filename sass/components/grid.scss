
$grid-gutter-padding: 10px;

.fy-gc {
	&:after {
		content: '.';
		display: block;
		visibility: hidden;
		height: 0;
		clear: both;
	}
}

@for $i from 1 through $max-cols-number {
	.fy-gc#{$i} {
			float: left;
			width: (100/$max-cols-number)*$i + %;
	}
}

@for $i from 1 through $max-cols-number {
	/*.fy-gcxs#{$i} {
			float: left;
			width: (100/$max-cols-number)*$i + %;
	}*/
}

@for $i from 1 through $max-cols-number {
	.fy-gcs#{$i} {
		@include min-media($small-min-size) {
			float: left;
			width: (100/$max-cols-number)*$i + %;
		}
	}
}

@for $i from 1 through $max-cols-number {
	.fy-gcm#{$i} {
		@include min-media($medium-min-size) {
			float: left;
			width: (100/$max-cols-number)*$i + %;
		}
	}
}

@for $i from 1 through $max-cols-number {
	.fy-gcl#{$i} {
		@include min-media($large-min-size) {
			float: left;
			width: (100/$max-cols-number)*$i + %;
		}
	}
}

.fy-gc {

	&.-g {
		> * {
			padding-left: $grid-gutter-padding;
			padding-right: $grid-gutter-padding;
		}
		&\@l {
			> * {
				@include min-media($large-min-size) {
					padding-left: $grid-gutter-padding;
					padding-right: $grid-gutter-padding;
				}			
			}
		}		
		&\@m {
			> * {
				@include min-media($medium-min-size) {
					padding-left: $grid-gutter-padding;
					padding-right: $grid-gutter-padding;
				}			
			}
		}
		&\@s {
			> * {
				@include min-media($small-min-size) {
					padding-left: $grid-gutter-padding;
					padding-right: $grid-gutter-padding;
				}			
			}
		}
	}

}








